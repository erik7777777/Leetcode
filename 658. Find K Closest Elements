class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int left = 0;
        int right = arr.length - 1;
        while(left + 1 < right){
            int mid = left + (right - left)/2;
            if(arr[mid] <= x){
                left = mid;
            }else{
                right = mid;
            }
        }
        int theClosest = checkClosest(arr, left, right, x);
        //use two pointer to get k closest elements
        int l = theClosest - 1, r = theClosest;
        for (int i = 0; i < k; i++) {
            if (l < 0) {
                r++;
            } else if (r >= arr.length) {
                l--;
            } else {
                if (Math.abs(arr[l] - x) <= Math.abs(arr[r] - x)) {
                    l--;
                } else {
                    r++;
                }
            }
        }
        List<Integer> res = new ArrayList<>();
        for(int i = l + 1;i < r;i++){
            res.add(arr[i]);
        }
        return res;
    }
    
    private int checkClosest(int[] arr, int left, int right, int x){
        if (left == right || Math.abs(arr[left] - x) <= Math.abs(arr[right] - x)){
            return left;
        }else {
            return right;
        }
    }
}
