class Solution {
    public int minOperations(int[] nums, int x) {
        //其实是找最长的subarray， 并且和是nums.sum - x map存的是和与index
        int target = 0;
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int count = 0;
        for (int num : nums) target += num;
        if (target == x) return nums.length;
        target -= x;
        int sum = 0;
        boolean find = false;
        for (int i = 0; i < nums.length;i++){
            sum += nums[i];
            if (map.containsKey(sum - target)) {
                find = true;
                count = Math.max(count, i - map.get(sum - target));
            }
            if (!map.containsKey(sum)) map.put(sum, i);
        }
        return find ? nums.length - count : -1;
    }
}
